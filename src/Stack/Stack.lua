---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/5 14:18
---

---@class Stack 栈数据结构
Stack = {top,bottom}

Stack.__index = Stack

---@type function New 构造函数
function Stack:New()
    local result = {}
    setmetatable(result,Stack)
    result.top = 0
    result.bottom = 0
    return result
end

---@type function PopItem 弹出栈顶数据
function Stack:PopItem()
    if self.top - self.bottom >0 then
        local result = self[self.top]
        self.top = self.top -1
        return result
    else
       return nil
    end
end

---@type function PushItem 压入栈顶数据
function Stack:PushItem(value)
    table.insert(self,#self+1,value)
    self.top = #self
    return self.top
end

---@type function Count 统计数量
function Stack:Count()
    return self.top - self.bottom
end

---@type function Clear 清理
function Stack:Clear()
    if self.top - self.bottom >0 then
        local temp = self:PopItem()
        while(temp ~=nil) do
            temp = nil
            temp = self:PopItem()
        end
    end
    self.top = 0
    self.bottom = 0
end

---@type function Next 迭代器
function Stack:Next()
    local temp = self.top
    local i = 0
    return function()
        if temp - self.bottom > 0 then
            local result = self[temp]
            i = i + 1
            temp = self.top - i
            return result
        else
            return nil
        end
    end
end


return Stack
